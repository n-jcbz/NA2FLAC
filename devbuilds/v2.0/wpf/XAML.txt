<Window x:Class="NA2FLAC_v2._0_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Height="332" Width="600"
        ResizeMode="NoResize"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        Title="NA2FLAC v2.0"
        Icon="/Resources/icon.png">

    <Window.Resources>
        <!-- Button style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF555555" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" Duration="0:0:0.2"/>
                                            <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" To="2" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF333333" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF555555" Duration="0:0:0.2"/>
                                            <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Close-button style â€” rounded top-right corner -->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0,12,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E81123"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C42B1C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox style with watermark -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF1E1E1E"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock x:Name="Watermark"
                                           Text="Enter directory here..."
                                           Foreground="White"
                                           Margin="5,0,0,0"
                                           VerticalAlignment="Center"
                                           Opacity="0.5"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>

                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ProgressBar">
            <Setter Property="Background" Value="#FF1E1E1E"/>
            <Setter Property="Foreground" Value="#FF007ACC"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <Decorator x:Name="PART_Track">
                                <Border x:Name="PART_Indicator"
                                        CornerRadius="12"
                                        Background="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left"/>
                            </Decorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Window.Resources>

    <!-- ROOT BORDER â€“ solid background + rounded + CLIPS everything inside -->
    <Border Background="#FF121212"
            CornerRadius="12"
            ClipToBounds="True">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- TITLE BAR -->
            <Border Grid.Row="0" Grid.ColumnSpan="2" Background="Transparent" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="/Resources/icon.png" Width="30" Height="30" Margin="4,0,14,0" VerticalAlignment="Center"/>
                    <TextBlock Text="NA2FLAC v2.0" FontSize="20" VerticalAlignment="Top" Margin="40,1,92,0" Grid.ColumnSpan="2"/>
                    <Button Grid.Column="2" Content="âœ•" Style="{StaticResource CloseButtonStyle}" Click="Close_Click" Margin="4,0,0,0"/>
                </Grid>
            </Border>

            <!-- INPUT FOLDER SELECTION -->
            <TextBox x:Name="txtFolder" Grid.Row="1" Grid.Column="0" IsReadOnly="False" Margin="10,1,5,10"/>
            <Button Content="Browseâ€¦" Grid.Row="1" Grid.Column="1" Click="BrowseFolder_Click" Margin="0,0,10,10"/>

            <!-- SCAN / CONVERT buttons (centered) -->
            <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                <Button Content="Scan" Width="200" Margin="-5,0,10,0" Click="Scan_Click" FontSize="14"/>
                <Button Content="Convert" Width="200" Click="Convert_Click" Height="34" FontSize="14"/>
            </StackPanel>

            <!-- OUTPUT ROW: textbox on left, Browse/Open buttons on right -->
            <TextBox x:Name="txtOutput" Grid.Row="3" Grid.Column="0" IsReadOnly="False" Margin="10,0,5,10" ToolTip="Leave empty to default to input folder" Text=""/>
            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Top" Margin="0,0,10,10">
                <Button Content="Browse Outputâ€¦" Click="BrowseOutput_Click" Margin="0,0,0,6" Width="110"/>
                <Button Content="Open Output" Click="OpenOutput_Click" Width="110"/>
            </StackPanel>

            <!-- spacer (Grid.Row=4) -->

            <!-- Progress bar -->
            <ProgressBar x:Name="progressBar" Grid.Row="5" Grid.ColumnSpan="2" Height="25" Minimum="0" Maximum="100" Margin="10,0,10,10"/>

            <!-- Status text -->
            <Border Grid.Row="6" Grid.ColumnSpan="2" Background="#FF1E1E1E" BorderBrush="#FF555555" BorderThickness="1" CornerRadius="5" Padding="5" Margin="10,0,10,10">
                <TextBlock x:Name="txtStatus" Text="Status: Idle" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
            </Border>
        </Grid>
    </Border>
</Window>
